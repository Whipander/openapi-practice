openapi: 3.1.0
info:
  title: User Management API
  description: User Management API
  version: 1.0.0
paths:
  /users/{id}:
    get:
      parameters:
        - $ref: '#/components/parameters/UserId'
      description: Get a user by his ID.
      tags:
        - Users
      responses:
        200:
          description: Successfully found the user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
              examples:
                userExample:
                  value:
                    identifier: "user-12345"
                    personal_info:
                      first_name: "Jean"
                      last_name: "Dupont"
                      birthdate: "1990-05-15"
                      email: "jean.dupont@email.com"
                    address:
                      address_street: "123 Rue de la Paix"
                      address_city: "Paris"
                      address_country: "France"
                      address_postal_code: "75001"
                    preferences:
                      needs_newsletter: true
                      language: "fr"
  /users:
    post:
      description: Creates new users
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/CreateUserProfile"
            examples:
              createUsersExample:
                value:
                  - personal_info:
                      first_name: "Marie"
                      last_name: "Martin"
                      birthdate: "1985-08-22"
                      email: "marie.martin@email.com"
                    address:
                      address_street: "456 Avenue des Champs"
                      address_city: "Lyon"
                      address_country: "France"
                      address_postal_code: "69002"
                    preferences:
                      needs_newsletter: false
                      language: "fr"
      responses:
        201:
          description: Successfully created the users
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProfile"
              examples:
                example1:
                  value:
                    - identifier: user-1820
                      personal_info:
                        first_name: "Marie"
                        last_name: "Martin"
                        birthdate: "1985-08-22"
                        email: "marie.martin@email.com"
                      address:
                        address_street: "456 Avenue des Champs"
                        address_city: "Lyon"
                        address_country: "France"
                        address_postal_code: "69002"
                      preferences:
                        needs_newsletter: false
                        language: "fr"
components:
  schemas:
    PersonalInfo:
      type: object
      properties:
        first_name:
          type: string
          example: John
        last_name:
          type: string
          example: Doe
        birthdate:
          type: string
          format: date
          example: 2001-09-11
        email:
          type: string
          example: john.doe@example.com
      required:
        - first_name
        - last_name
        - birthdate
        - email

    Address:
      type: object
      properties:
        address_street:
          type: string
          example: Rue Pasteur Rabary
        address_city:
          type: string
          example: Antananarivo
        address_country:
          type: string
          example: MG
        address_postal_code:
          type: integer
          example: 101
      required:
        - address_country
        - address_postal_code
        - address_city
        - address_street

    Preferences:
      type: object
      properties:
        need_newsletter:
          type: boolean
          default: false
          description: If the user would like to receive news letter or not
          example: true
        language:
          type: string
          description: The language of the news letter
          enum:
            - mg
            - fr
            - en
          example: fr

    CreateUserProfile:
      type: object
      properties:
        personal_info:
          $ref: '#/components/schemas/PersonalInfo'
        address:
          $ref: '#/components/schemas/Address'
        preferences:
          $ref: '#/components/schemas/Preferences'
      required:
        - personal_info
        - address
        - preferences

    UserProfile:
        allOf:
          - type: object
            properties:
              identifier:
                type: string
                example: user-0123
            required:
              - identifier

          - $ref: "#/components/schemas/CreateUserProfile"
  parameters:
    UserId:
      name: id
      in: path
      required: true
      schema:
        type: string
        example: "user-0123"

